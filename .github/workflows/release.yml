name: Release

on:
  release:
    types: [published]

jobs:
  build:

    env:
      BUILD_CONFIG: 'Release'
      VERSION_DEFAULT: '6.0.1'

    runs-on: ubuntu-latest

    steps:
    - name: Setup PowerShell
      uses: CRFricke/Setup-PowerShell@v1.0.1

    - name: Get Build Version
      shell: pwsh
      run: |
        Get-VersionVariables $env:GITHUB_REF
        if ($Tag_PreRelease -or $Tag_Build) { throw "Invalid GITHUB_REF for release." }
        $Version = "$Tag_Major.$Tag_Minor.$Tag_Patch"
        Set-ActionVariable "BUILD_VERSION" "$Version"
        Write-Host "BUILD_VERSION: $Version"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
        source-url: https://nuget.pkg.github.com/CRFricke/index.json
        owner: CRFricke
      env:
          NUGET_AUTH_TOKEN: ${{secrets.USER_PAT}}

    - name: Restore dependencies
      run: dotnet restore

    - name: Update Authorization.Core References
      run: |
        dotnet remove **/Authorization.Core.UI.csproj reference **/Authorization.Core.csproj
        dotnet add **/Authorization.Core.UI.csproj package CRFricke.Authorization.Core --version $BUILD_VERSION

    - name: Build
      run: dotnet build --configuration $BUILD_CONFIG --no-restore /p:Version=$BUILD_VERSION

    - name: Test
      run: dotnet test --configuration $BUILD_CONFIG --no-build --verbosity normal

    - name: Create NuGet packages
      if: ${{github.ref_type == 'tag'}}
      run: dotnet pack Authorization.Core.NoTests.slnf --configuration $BUILD_CONFIG --no-build /p:Version=$BUILD_VERSION

    - name: Upload packages to NuGet.org
      if: ${{github.event_name == 'release'}}
      run: dotnet nuget push "**/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
