@page
@model Role.IndexModel
@{
    ViewData["Title"] = "Role Management";

    var basePath = Model.BasePath;

    var classCreate = (await AuthManager.IsAuthorizedAsync(User, SysClaims.Role.Create)) ? null : "disabled";
    var classDelete = (await AuthManager.IsAuthorizedAsync(User, SysClaims.Role.Delete)) ? null : "disabled";
    var classDetails = (await AuthManager.IsAuthorizedAsync(User, SysClaims.Role.Read)) ? null : "disabled";
    var classEdit = (await AuthManager.IsAuthorizedAsync(User, SysClaims.Role.Update)) ? null : "disabled";
}
<div class="row align-items-center">
    <div class="col-sm-4 text-center text-sm-start">
        <h2>@ViewData["Title"]</h2>
    </div>
    <partial name="_NotificationPartial" />
    <div class="col-12">
        <hr class="mt-2" />
    </div>
</div>
<div class="row">
    <div class="col-lg-11 col-xxl-8 mx-sm-3 pe-sm-4">
        <p>
            <a class="ac-anchor @classCreate" href="@($"{basePath}/Create")"
            @if (classCreate != null)
            {
                @:tabindex="-1" aria-disabled="true"
            }>Create New</a>
        </p>
        <table class="table table-sm w-100 opacity-0">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.RoleInfo[0].Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RoleInfo[0].Description)
                    </th>
                    <th data-orderable="false"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.RoleInfo)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            <a class="bi bi-pencil-square ac-icon-button @classEdit"
                            @if (classEdit != null)
                            {
                                @:tabindex="-1" aria-disabled="true"
                            }
                               href="@($"{basePath}/Edit?id={item.Id}")" title="Edit" aria-label="Edit" />
                            <a class="bi bi-binoculars ac-icon-button @classDetails"
                            @if (classDetails != null)
                            {
                                @:tabindex="-1" aria-disabled="true"
                            }
                               href="@($"{basePath}/Details?id={item.Id}")" title="View" aria-label="View" />
                            <a class="bi bi-trash ac-icon-button @classDelete"
                            @if (classDelete != null)
                            {
                                @:tabindex="-1" aria-disabled="true"
                            }
                               href="@($"{basePath}/Delete?id={item.Id}")" title="Delete" aria-label="Delete" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section scripts {

    <script defer>
        var $table = $('table');

        $table.DataTable({
            initComplete: function (settings, json) {
                $table.removeClass('opacity-0');
            }
        });
    </script>
}
