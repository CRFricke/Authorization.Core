@page
@model User.DetailsModel

@{
    ViewData["Title"] = "User Details";

    var classEdit = (await AuthManager.IsAuthorizedAsync(User, SysClaims.User.Update)) ? "" : "disabled";
}

@section css {

    <environment include="Development">
        <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.3/css/dataTables.bootstrap4.css" />
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.3/css/dataTables.bootstrap4.min.css" />
    </environment>

    <style>
        .col-properties {
            min-width: 25rem;
            max-width: 30rem;
        }
    </style>
}

<div class="row">
    <div class="col">
        <h3>@ViewData["Title"]</h3>
        <hr />
    </div>
</div>
<div class="row mx-sm-1">
    <div class="col-auto col-properties mr-sm-5 mb-3">
        <h5 class="form-text text-muted">The user's properties:</h5>
        <hr />
        <dl>
            <dt>
                @Html.DisplayNameFor(model => model.UserModel.Id)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UserModel.Id)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.UserModel.Email)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UserModel.Email)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.UserModel.GivenName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UserModel.GivenName) &nbsp;
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.UserModel.Surname)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UserModel.Surname) &nbsp;
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.UserModel.PhoneNumber)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UserModel.PhoneNumber) &nbsp;
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.UserModel.LockoutEnd)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UserModel.LockoutEnd) &nbsp;
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.UserModel.AccessFailedCount)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UserModel.AccessFailedCount)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.UserModel.EmailConfirmed)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UserModel.EmailConfirmed)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.UserModel.PhoneNumberConfirmed)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UserModel.PhoneNumberConfirmed)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.UserModel.LockoutEnabled)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UserModel.LockoutEnabled)
            </dd>
        </dl>
    </div>
    <div class="col">
        <h5 class="form-text text-center text-muted mb-3">The user's role assignments:</h5>
        <hr />
        <div class="mx-auto">
            <table class="table table-sm" data-order='[[1,"asc"]]'>
                <thead>
                    <tr>
                        <th class="select-col" data-orderable="false">
                            <label asp-for="UserModel.Roles.ElementAt(0).IsAssigned"></label>
                        </th>
                        <th><label asp-for="UserModel.Roles.ElementAt(0).Name"></label></th>
                        <th><label asp-for="UserModel.Roles.ElementAt(0).Description"></label></th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        foreach (var role in Model.UserModel.Roles)
                        {
                            var checkedVal = (role.IsAssigned) ? "checked" : "";
                            <tr>
                                <td class="align-middle">
                                    <input class="form-check ml-3" type="checkbox" @checkedVal disabled />
                                </td>
                                <td>
                                    @Html.DisplayFor(x => role.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(x => role.Description)
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="row mx-sm-1">
    <div class="col">
        <a class="@classEdit" asp-page="./Edit" asp-route-id="@Model.UserModel.Id">Edit</a> |
        <a asp-page="./Index">Back to List</a>
    </div>
</div>

@section Scripts {

    <environment include="Development">
        <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.js"></script>
        <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.3/js/dataTables.bootstrap4.js"></script>
    </environment>
    <environment exclude="Development">
        <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
        <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.3/js/dataTables.bootstrap4.min.js"></script>
    </environment>

    <script defer>
        $('table').first().DataTable();
    </script>
}
